#!/bin/bash
# Set the path to your `.kiosk.cfg` file
CFG=$HOME/.kiosk.cfg
. ${CFG}

CURRENTREFRESH=`grep -i "^REFRESH=" ${CFG} | sed 's/^REFRESH=//'`

if [ "$1" = "" ];then
	echo
	echo "You didn't add any arguments. Try adding -help"
	echo
	exit 1
else
	USERARG=`echo $1 | tr '[:upper:]' '[:lower:]'`
fi

function sendurl()
{
	export DISPLAY=:0.0
	python -m webbrowser -t $1
}

function listshortnames
{
	# Parse and print a list of entries in $URLFILE

	echo
	printf "%-3s %-20s %-40s %-40s \n" " " "Short Name" "Description" "URL"
	printf "%-3s %-20s %-40s %-40s \n" " " "---------------" "-----------------------------------" "-----------------------------------------------------------------"
	while IFS="," read -r rec_shortname rec_description rec_url
	do
		printf "%-3s %-20s %-40s %-40s \n" " " "${rec_shortname}" "${rec_description}" "${rec_url}"
	done < <(cat ${URLFILE} | grep -v "#")
	echo
}

case $USERARG in
	refresh|reload|f5)

		if [ "$2" = "" ]; then

			# If installed, xdotool will be called to refresh the browser page
			XDO=`which xdotool`

			if [ "${XDO}" = "" ];then
				echo
				echo "I can't find 'xdotool', please install it: sudo apt-get -y install xdotool"
				echo
			else
				export DISPLAY=:0.0
				xdotool key ctrl+F5 &
			fi
		else
			# Setting new refresh rate
			NEWREFRESH=$2
			sed -ie.bak "s/^REFRESH=.*/REFRESH=${NEWREFRESH}/g" ${CFG}
			echo
			echo "Changed REFRESH from ${CURRENTREFRESH} seconds to ${NEWREFRESH} seconds"
			echo
		fi
	;;
	off)
		# Turn off the screen
		/usr/bin/vcgencmd display_power 0 > /dev/null 2>&1
	;;
	on)
		# Turn on the screen
		/usr/bin/vcgencmd display_power 1 > /dev/null 2>&1
	;;
	list)
		# List all short names, parsing the $URLFILE
		listshortnames
	;;
	help|-help|--help)
		# Show the help screen
		echo
		echo "There are 2 commands plus a list of short names you can use to control this script"
		echo
		printf "%-3s %-20s %-40s \n" " " "Command" "Description"
		printf "%-3s %-20s %-40s \n" " " "---------------" "-----------------------------------"
		printf "%-3s %-20s %-40s \n" " " "On" "This will turn ON the screen"
		printf "%-3s %-20s %-40s \n" " " "Off" "This will turn OFF the screen"
		printf "%-3s %-20s %-40s \n" " " "Refresh" "Refreshes the browser"
		printf "%-3s %-20s %-40s \n" " " "Refresh ###" "Provide a number to change refresh time period (Current refresh rate: ${CURRENTREFRESH})"
		printf "%-3s %-20s %-40s \n" " " "Help" "Prints this help screen"
		echo
		listshortnames
	;;
	*)
		# If the contents of $USERARG start with `http` we will treat that as the URL to load to the display
		# If there is no `http` present then we will assume it's a short name and load the URL found in $URLFILE

		grep -qi "^http" <<< ${USERARG}
		_CHK="$?"
		if [ ${_CHK} = 0 ]; then
			# If $USERARG starts with `http` we just open that URL
			sendurl "${USERARG}" > /dev/null 2>&1
		else
			grep -qi "^${USERARG}," ${URLFILE}
			_QUERY="$?"
			# No URL detected in $USERARG, so taking this as a short name
			if [ ${_QUERY} = 1 ]; then
				echo
				echo "No short name -- ${USERARG} -- found, here is the list of what I know about..."
				echo
				listshortnames
				exit 255
			else
				while IFS="," read -r rec_shortname rec_description rec_url
				do
					sendurl "${rec_url}" > /dev/null 2>&1
				done < <(cat ${URLFILE} | grep -i "^${USERARG},")	
			fi
		fi
	;;
esac

#end